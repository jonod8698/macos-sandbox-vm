{
  "attire-version": "1.1",
  "execution-data": {
    "execution-source": "Invoke-Atomicredteam",
    "execution-id": "MzY3NmQwNzItNDU4NC00NzEyLTgxZjYtNTY1NjhmNGZiZjEx",
    "execution-category": {
      "name": "Atomic Red Team",
      "abbreviation": "ART"
    },
    "execution-command": "Invoke-AtomicTest T1560.001 -TestNumbers 9 -PathToAtomicsFolder /Users/admin/atomic-red-team/atomics -ExecutionLogPath ~/executionlog-T1560.001-9.json -TimeoutSeconds 60 -LoggingModule Attire-ExecutionLogger",
    "target": {
      "user": "admin",
      "host": "admins-Virtual-Machine.local",
      "ip": "192.168.64.174",
      "path": "/usr/local/microsoft/powershell/7:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin"
    },
    "time-generated": "2023-09-03T10:48:47.000Z"
  },
  "procedures": [
    {
      "mitre-technique-id": "T1560.001",
      "procedure-name": "Encrypts collected data with AES-256 and Base64",
      "procedure-id": {
        "type": "guid",
        "id": "a743e3a6-e8b2-4a30-abe7-ca85d201b5d3"
      },
      "procedure-description": "An adversary may compress all the collected data, encrypt and send them to a C2 server using base64 encoding. \nThis atomic test tries to emulate the behaviour of the FLEXIROOT backdoor to archive the collected data. FLEXIROOT typically utilizes AES encryption and base64 encoding to transfer the encrypted data to the C2 server. \nIn this test, standard zip compression and the OpenSSL library are used to encrypt the compressed data.\nhttps://attack.mitre.org/versions/v7/software/S0267/",
      "order": 9,
      "steps": [
        {
          "order": 1,
          "time-start": "2023-09-03T10:48:47.000Z",
          "time-stop": "2023-09-03T10:48:47.000Z",
          "executor": "bash",
          "command": "zip -r  /tmp/t1560/t1560_data.zip /tmp/t1560\nopenssl enc -aes-256-cbc -pass pass:atomic_enc_pass -p -in /tmp/t1560/t1560_data.zip -out /tmp/t1560/t1560_data.enc \ncat /tmp/t1560/t1560_data.enc | base64",
          "output": [
            {
              "content": "adding: tmp/t1560/ (stored 0%)\n  adding: tmp/t1560/k.data (stored 0%)\n  adding: tmp/t1560/g.data (stored 0%)\n  adding: tmp/t1560/s.data (stored 0%)\n  adding: tmp/t1560/f.data (stored 0%)\n  adding: tmp/t1560/j.data (stored 0%)\n  adding: tmp/t1560/a.data (stored 0%)\n  adding: tmp/t1560/t.data (stored 0%)\n  adding: tmp/t1560/m.data (stored 0%)\n  adding: tmp/t1560/x.data (stored 0%)\n  adding: tmp/t1560/y.data (stored 0%)\n  adding: tmp/t1560/l.data (stored 0%)\n  adding: tmp/t1560/u.data (stored 0%)\n  adding: tmp/t1560/v.data (stored 0%)\n  adding: tmp/t1560/c.data (stored 0%)\n  adding: tmp/t1560/z.data (stored 0%)\n  adding: tmp/t1560/o.data (stored 0%)\n  adding: tmp/t1560/n.data (stored 0%)\n  adding: tmp/t1560/b.data (stored 0%)\n  adding: tmp/t1560/w.data (stored 0%)\n  adding: tmp/t1560/r.data (stored 0%)\n  adding: tmp/t1560/i.data (stored 0%)\n  adding: tmp/t1560/p.data (stored 0%)\n  adding: tmp/t1560/e.data (stored 0%)\n  adding: tmp/t1560/d.data (stored 0%)\n  adding: tmp/t1560/q.data (stored 0%)\n  adding: tmp/t1560/h.data (stored 0%)\nsalt=5503E970EF331CD0\nkey=D106D8F7AEA8857A546564B182F629C9F358BBE405A2E1EFE389DDEC7E3AE75B\niv =0091E4D4945CDDDE48DFAB904F586564\nU2FsdGVkX19VA+lw7zMc0L44YNlyr98QAGDXSzrkp0Rbhe5/pyo9caMWZI0kVS40ZydwcgsEJ7gVNH0fBqtg6GPvmMkq3uZpYjPVoTqNeHQjQfDPY7853O8dPWbzm3pfv83i5Gi3A/eWUbEJnT8pVJnJvNXCabbXaYM31OD+bca8El5fBmJNbbzN8WuQNGjb+PSIdBdioUEPAVFrYBwcDXVm1vq/s0f2zmPaIx30ZUH6tjXK+PjWHyI+59qQkDWVozZYjy+tSWPLQUvsJ6RVW1AEHusGbNbK4NW5RS5cG++L/HMgFfNszVj8YAcy+rMNTGpzhoFhqgA51MeUz1Utav+TwRFNK0IfLubbXgmU4X8MqcyKCRR64sR0eG6Y71kuqjOWnPXH9ZorYdkqlhD+w65/wZYZl+MMIPI71QXRcxRrl8RMErNsDX7ppveywCzL2KQnDYrHWcDoY//PnC0nkUB7ZyC9W5ATpx/v0+0Vr36mNH4O2YBWpgT4+BarjCsgL0LSDySWxoUUwfOjm43/cnGWn64BUD69cN7Zr0MLK7M2KNWlYkZ3darebZ1WajKUUngKtFrs4xNyGC1jp5BIPAJtR5PSKZLHC0rGzmW18TWv4D3enhMlSOZeyGBsN6CLOoXe3TkCr6RinXEgpJAUByQpMaaa6gokB09BCRiX3LYoxHpLzmeX3mkMH0GaOO9tVZS/0fzzsZUd8m390LPp2p7OlCsZaQ9vO+lxeRBWQdjL+ovA2j55DT3Tpfm0UEZb6CaqIPMemuAghi9aw9bod5I88ShqL7Hxl0PuHJV2MgEEPPofSD/R/08vhk2fRfbB99mlijgqibgqim0IASK632Ux5xPsxq7c6DLZu5Z/Fyp+aul0BfTna0JxCRCST8of7QrR+Bc5/i/OXM5i1cgURfWD9gX4KDTrlpD4SL6C9aYnZjIu1THjrvQ1UhQgNBBNbb0A3kG6pXT++19Qq9smRQWmnPbu4Nb2B1FMCLcXdoY5hqdkiDqHvY2LlsKmqWYcrurwWOJ3s6uesjEk1hgBBwnLxLyLsdypQ5FsR6dELMD9lKMH2o+NtUIW0QNn6kq3o9/xRvdEML12SUR30wClzfCo1fcTiWjLkJCDGmyLoTGU35f5pOg6dMOmRUnY08tZNkweYATcrIHDizimPJ323p4Ubppcg4Q3Zh+UE78EipeS3UTl/cVJOU8Whx7A/TAv9CH61bozpQKJVZHV634/sfpR6pevKNLQ+76OwdC/tx5QZrJwGiXw7FhhUHF6IW8nlFpkIt/VMNGjujBr+DuCdBTOvM170noxcNVO6wFac9EDtY3Bp2t0c0rtt0q/5ImW0U6Q7qH05py5ToMyfs/8f5FvMRORtX97lN0xefpfXO8DbkhwZcOFFDMI2ep/cX+P7MyKSVzleDSpK/575rOO8ZLnuI/sugBd2mbBaJjxCkfuC8gFlFTZ3mJSWCfisXIBd+Wh5HXmrtNfVY+HUjVVyTIZP4bZIU8qzjU3n6Sp7S7exelD9WBi9TZpgDkomMISzTkFnUcA4L9sVN1KpHa1aIVi8zNi4Xjs9v/v/tMOQbLLxK+IVpfkYe5zsy/KWSC6OLCgOka+oVEDCsCF5bVYESCWfbMZDhRw1l/0zTaUSMqs11ZIy5V4dNLyupgLOQkP9by6vBsXA0WYbN/6mwURwzTItEYN2AYINYYLtG++s1Opu8VrfRPttkAXTtkXyyIPxWh2WwDKIP6g627E0Qz8mkFJaUmXFjUeSvUMHAga16/9zE2mOIQuTSHvcEOSIKR2y2+AO+kE53jONfWmlFQCAxfVEgUhPiUjgAunE2O0bnncV+pCZSIkcXGrUdRdnQBFg9DCfvJoUvFy8d9Oc+MkQ4TRHIn/zRS2KLcGkP6NDEWYh4WPeAzecZOLGJvu4om5XNCThewfVR+V/O2HPs0xopj8HBuCGWn/av76ENWBkACq6PScaKxZMWSp7scXD1XkVDARR63hs2FVq9SB04xcvhr6if2erlFNbMUrEnpGi+SkSLHLoasy/KPxApJOt16+omK+cRH8oHEL6HmNkdVwT/98DBBFO4n4cewV8UxHRdK6H4juxkiIfSgvb9FfyZTNRQW29JwpyaJPxjgSFKkfyjpReyzR7h9FafNlpKEZ6IjdpwJyRGl6m+XjvkriRq8+0bwY7PkI85cXXQahdlI7SYDGA2B/MmZTgq5mLQTcNI0nBckDTbrDnmQQesZBxYXCWdx1mIPxq3b7xpHnLGIkeyfPi5FpC9NyFNU6cI0hN8qZ7zVbI/2sGcRBXA/1JprxxJ2qUMhID4IkbrVnyVwxGp83WvzSsL7K1zfMbM5mQeAxp3FjWCF4PD0knQBjfT+gqc3dG+GA0iP7iH1Vm16I/FGGRiYs4xlS5ouPPN/B22ThA45EQXF/Ohv7c2s1OxBi731MIgbjmwp4uBbmp25WTAbsTkEm2fQu2ZRXsV62jTvTy4GnHZj+q0NviFKeJpmMQP5KLG1qQdJjCxpBhzpPIktOmqZcxyV6eFwIGFq0utI82i1zIjUzZ8KoxKDMvp5eldz5HtjsA11uwzkFt+3WVPjXnBU63lEaHS7yFODot4rcL1Ri3fXtlXC8oM1W1nUx3G26dqAkbwVLc8UFCKRKFdJafpSZXybFTfrU5RQN0bkbekk76nbZFufCZ72r4RZaD+88LDkejmpeCPgp7AGi1aXq/E4qin2XArjpJJf7LcVxXHqccY3BlAxA/xlcl9SCtPQKCvY3mcmDkEiRBWVLhXoSrYr+7YCJtMMaSIWlkEkut6mH7+EFZUajtRkGsy1tXzgd3rtKVn2jprrqa6fTwvibQhbvMjqhwN2jNQgFEZsgC+ABa6Q6gknmjFkOFYQX3L8pmFTF2JJxcKrjoT+cvzTSeCGHR56uCm2YUzTEzqekIcWjdiARG9d/3rk96ND79h4PapoYYYHLdYl0LUyNrOLpWgQVOZoqioYTXX5/d6+ZSOstY3LCrARB5jEbJbip/70vUbkCxP9IH4z/591G6eFdNn4XMqw0UvxlHe6WZfXQNUjs0uysKI92lsJcCX+FgmxH2+xYqMOFPc5xZn0n3uC5D5fdZtPjCsxfnZX7RB6bOC/2PY6lnLd7rNzYKGulXZE0HuYM9DeglDoPky7LCjoNnsdv6PmEdm27UrvwGzMl1/3CsZuqKhaMWo5NQalh0ZnzQOaLED4Tuo1xnf5J7UYRev51/xFSUg41SaIaFPKjAAl+DOnH70V1EmdmyFSnTgM3f9X+tLEmbZI10In8gWDf49j824X/uVZWl/th6XEMgcCYt+3IYWuUrdhKaVdhKWSVJnSk9ZxlM51+Gj85izQdGGScGM1hDR+ak7C0rC7HM9nZVQbvfK2FZS6kopN1iAGDQ7npiRtN5Tn8M8Dj+gdqM7JWO0uEHNbg2XAY/c/PeiF1vh3FQCkWGB8Ui64XzyrqKUmSiipI9WKWCaML1amiFbtVpSx8dY+U+5Y+z0sBsFtNpbvZ0CQQGKd2tbygjJh9mUdnjLknfX7xcA7ys3zCL/AG1nMLOOJzlKV4ErjcXq/TBGIrhxFZGXxboPk5DlUJAa3YYOrFopex2OTgYwO/XPcSS3s63coVlQypwSCa0Zkiu5jylfzFWokJhtnfpAWHcDBIE5QqIReOzb+gvA0gsd/YlNpsFZFgbEUz5J52CO7yHN8cH9PFm+dJ5oscCHIm5GUar9IIkcW8i2XMiZFD9J/cOWMBDNzRXKRoCv41i+B4cIq7qfZ+CY7apoUGOJBBNdf8cLTOe+s2s/IYdTHsvuolhe1OOmhK39XZ/efSdTKnZrobZoVrS1zedz2K0pbE4w16EkIJz8x2Z7vENWV6YbzDcoK9+6Hd83drQhNGhnsupWfn4XOMsknTeEw3eqb0ieJ4UOQFTxMhdJfUsPuqTIN/CuFBIYs5A5lMvqBny5U2bp0l3GivgJUwyhrZjr2kx+iPIpQy9bzaHzu7yu7VW/ZAbdJcSunEXWdRt6IKCvZMJ0winuJInmCRH9Ds/tFId9KSRU+ue8/VtJYWi/vAkER9G5e27KK/ao0BF9p3Ob7pY8PHKCafaKayRwIpieASvF3VO+ktvoqZcGjVfIQ8LaGQ74VPW88n7F+gW16cy1ZjzzzSGoroTKc7RsyJBnGbKEpnyTu+vIVa3V/WgIEPeTpea/gdDqdAShW2iCum3qwUAW+V+iHHydCVfwwh8ymFXOjGPOO4Y2mkwBquADg8PeGno+aZ3PKMmIrJL/q+D93LQZa6ji9Vm362SHPPcb+N5eX0fXMOV+or9T+q7WblnZZ5DcP2WpqLhvPmJn0hTkbb1kbfkitj8uWuFpmB3/J5bgMZraBo0In9pjFzIii96vVoRlOSlty3AJgMWQ/aULU7ARbOQ0/LbDovc//gwVfLsc7O/rSmXJuvogvprw7mSTitimAo5qkhxP2C797csMwbH3sSgzhGi5nss50qSNNmiQUdCkjy7Lp/DrI14myVSh/r3B5YEaeHvzUsZwoLqzOuPT2pnsO+83aCf4tSDE/IwhrnEaitTqOM2v1AOav2zvcnyqNDZF2nLCkoF3q5TR78iKdXBHCHAGZs+lYDo+86/LFnYYO1WEFmosDHaJaZjVsO8mue8GxJCUOgOv+O46y2F2QsVxQE/yeDf/e+cZSmsa0jkA8x8J/gmnpKOZNNKKHDHv1K0fn2mFPnSQcqr4PobxB3IQwvuZWvH+1YimbJZK4BICTrcpzv/7dGrwMggEp03QEY+b4hod4s7wCu4Y8j0W5dAU/D3X3uz9UY3rwuWTRVJGoKusDf1K/MZmu2qRn6a19Y1frsUvml+pW8mLCzRfqrMdw7KdNlN38Cij1wW3esqL2tkclXH6qzcjSpnQ38LaT07X0dDO14nukKc/Jguom2VHH/YnSCyYrMmqBkDiptjKTEcqqll8PfeKbCXklavTmOrbmcJde1xj6/b+cjHRfKGV373HPZmuWCdKKt1suHc5IblF2fySddSVFpP66G8/bOWeWWwm0UrOHFWj255Gjb35nVJ32oJDp2BCxjoDf7aVCQ0eVLSFBy+1nw/v+sDlVgXcoG9kwk6Ansfkg0XRnJxtDjCRESRkYSo+ZupWCOMpipIhtAuI9KllCKguYe62GAxFRSbKC513u4zjWeK2zCkT33C8IErw1b4oXEm/qoHvPRj9W1lmUGFIrDaqKbGrvdliWL13EvhC5AyYmdkIjip+3cSc8FMhOptOkOwaPFp6Ozf1AAJxlV7Y1OppCaeutI8lEIFHKeqn+ucVjjhR0SPHyFe2V9e88gtLt30z6OG4A0it7W2JgaJK0/qnoaFODHxPIQLf+l8rt4KOK6EI+fPtkQIw+MDFuJ/yEZd1lhhhqJhLz/8GDa1zjxu6PZaTfCJQCTrkWcdcruPnpX8ZvBe8cC3zuEk2VmnBZ0OOrUlLi3h+zVEIdEnYbj56eGlwPGqexQDV8KkDlGcPkcyT586zUQTSFYz8Wq+o0cN6mJov0FRraT541FwcISqW6hs7EKtqObX8k5Dy8wLqlrEKHrYmE1+sgCGWNO5PDN3oksGq4rmjWaJcFxUYMsUF/i3srNXi92OzuA7wkyvataU+ZuE/xFMApFjsVXxmY+O8V1Z7cfVee14XtT4CENnJhfZaLKqmYc4u4xZQZndGh5KVePHJzo5MYsBbXzOHPvmKZ+3yz1DgDYunw+scuZAk9vUeniwS8YDedf09Fn0+tEoGGmoEUm/9yeNChhSymT3z3qhK7C5SV5e+Cat7hWOX1IQNDPR+rWDoWxbuA=",
              "level": "STDOUT",
              "type": "console"
            },
            {
              "content": "Using -iter or -pbkdf2 would be better.\n*** WARNING : deprecated key derivation used.",
              "level": "STDERR",
              "type": "console"
            }
          ]
        }
      ]
    }
  ]
}
